
        int32_t ret = 0;

        void* dllHandle = WINRT_IMPL_LoadLibraryW(
            L"C:\\Users\\rebek\\source\\DUALITY\\x64\\Debug\\HV4DAPPLICATION\\HV4DAPPLICATION.dll");

        if (!dllHandle) { throw; };

        void* pProc = WINRT_IMPL_GetProcAddress(dllHandle, "DllGetActivationFactory");
        auto DllGetActivationFactory = reinterpret_cast<int32_t(__stdcall*)(void* classId, void** factory)>(pProc);

        static const WCHAR* cname = L"HV4DAPPLICATION.HV4DApplication";
        const size_t cnamelen = wcslen(cname);

        HSTRING hcname = NULL;
        HSTRING_PROJECT project;
        HRESULT hr = WindowsCreateStringReference(cname, cnamelen, &project, &hcname);

        com_ptr< winrt::impl::abi_t<winrt::Windows::Foundation::IActivationFactory> > oCOMActivationFactory{ nullptr };
        ret = (*DllGetActivationFactory)(&project, oCOMActivationFactory.put_void());

        com_ptr< winrt::impl::abi_t<winrt::Windows::Foundation::IUnknown> > iObj{ nullptr };
        ret = oCOMActivationFactory.get()->ActivateInstance(iObj.put_void());

        oApplication = nullptr;
        winrt::copy_from_abi(oApplication, iObj.as<HV4D::HV4DSYS::IHV4DApplication>());

        oApplication.get()->LoadApplication();

        oCOMActivationFactory.detach();

        WindowsDeleteString(hcname);

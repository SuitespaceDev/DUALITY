#include "pch.h"

#include "HV4DMapConfigurationFile.h"

using namespace winrt::HV4D;
using namespace winrt::HV4D::HV4DFLOW;
using namespace winrt::HV4D::HV4DWINRT;

namespace winrt::HV4D::HV4DDUALITY
{
	std::unordered_map<HV4D_DUALITY_FIELD_ID, hstring> const tagHV4DMapConfigurationFieldIDToHstring{
		{ HV4D_DUALITY_FIELD_ID::HV4D_PROJECT_HVID		,L"HV4D_PROJECT_HVID"		},
		{ HV4D_DUALITY_FIELD_ID::HV4D_CREATED_MMDDYYYY	,L"HV4D_CREATED_MMDDYYYY"	},
		{ HV4D_DUALITY_FIELD_ID::HV4D_CREATED_HHMMSS	,L"HV4D_CREATED_HHMMSS"		},
		{ HV4D_DUALITY_FIELD_ID::HV4D_SAVED_MMDDYYYY	,L"HV4D_SAVED_MMDDYYYY"		},
		{ HV4D_DUALITY_FIELD_ID::HV4D_SAVED_HHMMSS		,L"HV4D_SAVED_HHMMSS"		},
		{ HV4D_DUALITY_FIELD_ID::HV4D_OPENED_MMDDYYYY	,L"HV4D_OPENED_MMDDYYYY"	},
		{ HV4D_DUALITY_FIELD_ID::HV4D_OPENED_HHMMSS		,L"HV4D_OPENED_HHMMSS"		},
		{ HV4D_DUALITY_FIELD_ID::HV4D_PROJECT_NAME		,L"HV4D_PROJECT_NAME"		},
		{ HV4D_DUALITY_FIELD_ID::HV4D_INDEX_PATH		,L"HV4D_INDEX_PATH"			},
		{ HV4D_DUALITY_FIELD_ID::HV4D_INDEX_FILE		,L"HV4D_INDEX_FILE" 		},
		{ HV4D_DUALITY_FIELD_ID::HV4D_PROJECT_PATH	    ,L"HV4D_PROJECT_PATH"	    },
		{ HV4D_DUALITY_FIELD_ID::HV4D_PROJECT_FILE	    ,L"HV4D_PROJECT_FILE"	    } };

	const std::unordered_map<HV4D_DUALITY_FIELD_ID, hstring>* const HV4DMapConfigurationFieldIDToHstring()
	{
		return &tagHV4DMapConfigurationFieldIDToHstring;

	}

	std::unordered_map<hstring, HV4D_DUALITY_FIELD_ID> const tagHV4DMapConfigurationFieldHstringToID{
		{ L"HV4D_PROJECT_HVID"		,HV4D_DUALITY_FIELD_ID::HV4D_PROJECT_HVID		},
		{ L"HV4D_CREATED_MMDDYYYY"	,HV4D_DUALITY_FIELD_ID::HV4D_CREATED_MMDDYYYY	},
		{ L"HV4D_CREATED_HHMMSS"	,HV4D_DUALITY_FIELD_ID::HV4D_CREATED_HHMMSS		},
		{ L"HV4D_SAVED_MMDDYYYY"	,HV4D_DUALITY_FIELD_ID::HV4D_SAVED_MMDDYYYY		},
		{ L"HV4D_SAVED_HHMMSS"		,HV4D_DUALITY_FIELD_ID::HV4D_SAVED_HHMMSS		},
		{ L"HV4D_OPENED_MMDDYYYY"	,HV4D_DUALITY_FIELD_ID::HV4D_OPENED_MMDDYYYY	},
		{ L"HV4D_OPENED_HHMMSS"		,HV4D_DUALITY_FIELD_ID::HV4D_OPENED_HHMMSS		},
		{ L"HV4D_PROJECT_NAME"		,HV4D_DUALITY_FIELD_ID::HV4D_PROJECT_NAME		},
		{ L"HV4D_INDEX_PATH"		,HV4D_DUALITY_FIELD_ID::HV4D_INDEX_PATH			},
		{ L"HV4D_INDEX_FILE" 		,HV4D_DUALITY_FIELD_ID::HV4D_INDEX_FILE			},
		{ L"HV4D_PROJECT_PATH"	    ,HV4D_DUALITY_FIELD_ID::HV4D_PROJECT_PATH	    },
		{ L"HV4D_PROJECT_FILE"	    ,HV4D_DUALITY_FIELD_ID::HV4D_PROJECT_FILE	    } };

	const std::unordered_map<hstring, HV4D_DUALITY_FIELD_ID>* const HV4DMapConfigurationFieldHstringToID()
	{
		return &tagHV4DMapConfigurationFieldHstringToID;

	}

	std::vector<HV4D_ENUMERATED_DUALITY_ENTRY> HV4DInitEnumeratedConfigurationField()
	{
		std::vector<HV4D_ENUMERATED_DUALITY_ENTRY> out{};

		std::unordered_map<HV4D_DUALITY_FIELD_ID, hstring>::const_iterator citt{};

		for (citt = HV4DMapConfigurationFieldIDToHstring()->begin(); citt != HV4DMapConfigurationFieldIDToHstring()->end(); citt++)
		{
			out.push_back(HV4D_ENUMERATED_DUALITY_ENTRY{ citt->first, L"" });

		}

		return out;

	}

}